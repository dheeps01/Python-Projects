import random
import tkinter as tk
from tkinter import PhotoImage

def get_computer_choice():
    """Randomly generate computer's choice."""
    return random.choice(["rock", "paper", "scissors"])

def determine_winner(user_choice, computer_choice):
    """Determine the result of a round."""
    if user_choice == computer_choice:
        return "tie"
    elif (
        (user_choice == "rock" and computer_choice == "scissors") or
        (user_choice == "scissors" and computer_choice == "paper") or
        (user_choice == "paper" and computer_choice == "rock")
    ):
        return "user"
    else:
        return "computer"

def play_game(user_choice):
    """Handle the gameplay logic and update the UI."""
    global user_score, computer_score

    computer_choice = get_computer_choice()
    winner = determine_winner(user_choice, computer_choice)

    user_image_label.config(image=images[user_choice])
    computer_image_label.config(image=images[computer_choice])

    if winner == "tie":
        result_text.set("It's a tie!")
    elif winner == "user":
        result_text.set("You win this round!")
        user_score += 1
    else:
        result_text.set("Computer wins this round!")
        computer_score += 1

    score_text.set(f"Score: You {user_score} - {computer_score} Computer")

def reset_game():
    """Reset the game to its initial state."""
    global user_score, computer_score
    user_score = 0
    computer_score = 0
    result_text.set("Make your choice to start the game!")
    score_text.set("Score: You 0 - 0 Computer")
    user_image_label.config(image=placeholder_image_resized)
    computer_image_label.config(image=placeholder_image_resized)

# Initialize the game
user_score = 0
computer_score = 0

# Create the main window
root = tk.Tk()
root.title("Rock-Paper-Scissors")
root.geometry("600x500")
root.resizable(False, False)
root.configure(bg="#f0e68c")  # Light Khaki background color

# Load and resize images
try:
    placeholder_image = PhotoImage(file="placeholder.png")
    placeholder_image_resized = placeholder_image.subsample(3, 3)  # Adjust scaling as needed

    images = {
        "rock": PhotoImage(file="rock.png").subsample(3, 3),  # Adjust scaling as needed
        "paper": PhotoImage(file="paper.png").subsample(3, 3),  # Adjust scaling as needed
        "scissors": PhotoImage(file="scissors.png").subsample(3, 3),  # Adjust scaling as needed
    }
except tk.TclError as e:
    print(f"Error loading images: {e}")
    exit()

# Add title label
title_label = tk.Label(root, text="Rock-Paper-Scissors", font=("Helvetica", 20, "bold"), bg="#f0e68c")
title_label.pack(pady=10)

# Display images for user and computer choices
image_frame = tk.Frame(root, bg="#f0e68c")
image_frame.pack(pady=20)

user_image_label = tk.Label(image_frame, image=placeholder_image_resized, bg="#f0e68c")
user_image_label.grid(row=0, column=0, padx=20)

computer_image_label = tk.Label(image_frame, image=placeholder_image_resized, bg="#f0e68c")
computer_image_label.grid(row=0, column=1, padx=20)

# Display result
default_text = "Make your choice to start the game!"
result_text = tk.StringVar(value=default_text)
result_label = tk.Label(root, textvariable=result_text, font=("Helvetica", 14), bg="#f0e68c", wraplength=350, justify="center")
result_label.pack(pady=10)

# Display score
score_text = tk.StringVar(value="Score: You 0 - 0 Computer")
score_label = tk.Label(root, textvariable=score_text, font=("Helvetica", 14, "bold"), bg="#f0e68c")
score_label.pack(pady=10)

# Add buttons for user choices
button_frame = tk.Frame(root, bg="#f0e68c")
button_frame.pack(pady=20)

rock_button = tk.Button(button_frame, text="Rock", font=("Helvetica", 14), command=lambda: play_game("rock"), width=10)
rock_button.grid(row=0, column=0, padx=10, pady=5)

paper_button = tk.Button(button_frame, text="Paper", font=("Helvetica", 14), command=lambda: play_game("paper"), width=10)
paper_button.grid(row=0, column=1, padx=10, pady=5)

scissors_button = tk.Button(button_frame, text="Scissors", font=("Helvetica", 14), command=lambda: play_game("scissors"), width=10)
scissors_button.grid(row=0, column=2, padx=10, pady=5)

# Add reset button
reset_button = tk.Button(root, text="Reset Game", font=("Helvetica", 14), command=reset_game, bg="red", fg="white")
reset_button.pack(pady=10)

# Run the main loop
root.mainloop()
